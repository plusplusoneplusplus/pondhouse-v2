syntax = "proto3";

package pond.proto;

// Service definition for the Pond database
service PondService {
  // Get a value by key
  rpc Get(GetRequest) returns (GetResponse) {}
  
  // Put a key-value pair
  rpc Put(PutRequest) returns (PutResponse) {}
  
  // Delete a key
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}
  
  // Scan a range of keys
  rpc Scan(ScanRequest) returns (stream ScanResponse) {}

  // List files and directories with detailed information
  rpc ListDetailedFiles(ListDetailedFilesRequest) returns (ListDetailedFilesResponse) {}
  
  // Get directory information
  rpc GetDirectoryInfo(DirectoryInfoRequest) returns (DirectoryInfoResponse) {}
  
  // Execute SQL query (primarily for table creation)
  rpc ExecuteSQL(ExecuteSQLRequest) returns (ExecuteSQLResponse) {}
  
  // List all tables in the catalog
  rpc ListTables(ListTablesRequest) returns (ListTablesResponse) {}
  
  // Get table metadata
  rpc GetTableMetadata(GetTableMetadataRequest) returns (GetTableMetadataResponse) {}
}

// Request message for Get operation
message GetRequest {
  bytes key = 1;
}

// Response message for Get operation
message GetResponse {
  bool found = 1;
  bytes value = 2;
  string error = 3;
}

// Request message for Put operation
message PutRequest {
  bytes key = 1;
  bytes value = 2;
}

// Response message for Put operation
message PutResponse {
  bool success = 1;
  string error = 2;
}

// Request message for Delete operation
message DeleteRequest {
  bytes key = 1;
}

// Response message for Delete operation
message DeleteResponse {
  bool success = 1;
  string error = 2;
}

// Request message for Scan operation
message ScanRequest {
  bytes start_key = 1;
  bytes end_key = 2;
  int32 limit = 3;
}

// Response message for Scan operation
message ScanResponse {
  bytes key = 1;
  bytes value = 2;
  bool has_more = 3;
  string error = 4;
}

// Request message for ListDetailedFiles operation
message ListDetailedFilesRequest {
  string path = 1;
  bool recursive = 2;
}

// File system entry with path and type information
message FileSystemEntry {
  string path = 1;
  bool is_directory = 2;
}

// Response message for ListDetailedFiles operation
message ListDetailedFilesResponse {
  repeated FileSystemEntry entries = 1;
  bool success = 2;
  string error = 3;
}

// Request message for GetDirectoryInfo operation
message DirectoryInfoRequest {
  string path = 1;
}

// Response message for GetDirectoryInfo operation
message DirectoryInfoResponse {
  bool exists = 1;
  bool is_directory = 2;
  uint64 num_files = 3;
  uint64 total_size = 4;
  bool success = 5;
  string error = 6;
}

// Column information for table schema
message ColumnInfo {
  string name = 1;
  string type = 2;
}

// Table metadata information
message TableMetadataInfo {
  string name = 1;
  string location = 2;
  repeated ColumnInfo columns = 3;
  repeated string partition_columns = 4;
  map<string, string> properties = 5;
  int64 last_updated_ms = 6;
}

// Request message for ExecuteSQL operation
message ExecuteSQLRequest {
  string sql_query = 1;
}

// Response message for ExecuteSQL operation
message ExecuteSQLResponse {
  bool success = 1;
  string error = 2;
  string message = 3;
}

// Request message for ListTables operation
message ListTablesRequest {
}

// Response message for ListTables operation
message ListTablesResponse {
  repeated string table_names = 1;
  bool success = 2;
  string error = 3;
}

// Request message for GetTableMetadata operation
message GetTableMetadataRequest {
  string table_name = 1;
}

// Response message for GetTableMetadata operation
message GetTableMetadataResponse {
  TableMetadataInfo metadata = 1;
  bool success = 2;
  string error = 3;
} 